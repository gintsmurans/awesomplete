var Awesomplete=function(g){var I={};function C(A){if(I[A])return I[A].exports;var n=I[A]={i:A,l:!1,exports:{}};return g[A].call(n.exports,n,n.exports,C),n.l=!0,n.exports}return C.m=g,C.c=I,C.d=function(g,I,A){C.o(g,I)||Object.defineProperty(g,I,{enumerable:!0,get:A})},C.r=function(g){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(g,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(g,"__esModule",{value:!0})},C.t=function(g,I){if(1&I&&(g=C(g)),8&I)return g;if(4&I&&"object"==typeof g&&g&&g.__esModule)return g;var A=Object.create(null);if(C.r(A),Object.defineProperty(A,"default",{enumerable:!0,value:g}),2&I&&"string"!=typeof g)for(var n in g)C.d(A,n,function(I){return g[I]}.bind(null,n));return A},C.n=function(g){var I=g&&g.__esModule?function(){return g.default}:function(){return g};return C.d(I,"a",I),I},C.o=function(g,I){return Object.prototype.hasOwnProperty.call(g,I)},C.p="",C(C.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Awesomplete; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Simple, lightweight, usable local autocomplete library for modern browsers\n * Because there weren’t enough autocomplete scripts in the world?\n * Because I’m completely insane and have NIH syndrome? Probably both. :P\n * @author Lea Verou http://leaverou.github.io/awesomplete\n * MIT license\n */\n\n/** Class representing a single Suggesstion. */\nvar Suggestion =\n/*#__PURE__*/\nfunction () {\n  function Suggestion(data) {\n    _classCallCheck(this, Suggestion);\n\n    var o = {\n      label: 'Unknown data',\n      value: 'Unknown data'\n    };\n\n    if (typeof data === 'string') {\n      o = {\n        label: data,\n        value: data\n      };\n    } else if (Array.isArray(data)) {\n      o = {\n        label: data[0],\n        value: data[1]\n      };\n    } else if (_typeof(data) === 'object' && ('label' in data || 'value' in data)) {\n      o = data;\n    }\n\n    this.label = o.label || o.value;\n    this.value = o.value;\n\n    if ('userData' in o) {\n      this.userData = o.userData;\n    }\n  }\n\n  _createClass(Suggestion, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.label);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.toString();\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this.label.length;\n    }\n  }]);\n\n  return Suggestion;\n}();\n/** Class representing Awesomplete. */\n\n\nvar Awesomplete =\n/*#__PURE__*/\nfunction () {\n  function Awesomplete(input, o) {\n    _classCallCheck(this, Awesomplete);\n\n    Awesomplete.all = [];\n    var me = this; // Keep track of number of instances for unique IDs\n\n    Awesomplete.count = (Awesomplete.count || 0) + 1;\n    this.count = Awesomplete.count; // Setup\n\n    this.isOpened = false;\n    this.input = Awesomplete.query(input);\n    this.input.setAttribute('autocomplete', 'off');\n    this.input.setAttribute('aria-owns', \"awesomplete_list_\".concat(this.count));\n    this.input.setAttribute('role', 'combobox'); // store constructor options in case we need to distinguish\n    // between default and customized behavior later on\n\n    if (o) {\n      this.options = o;\n    } else {\n      this.options = {};\n    }\n\n    this.configure({\n      minChars: 2,\n      maxItems: 10,\n      autoFirst: false,\n      data: Awesomplete.DATA,\n      filter: Awesomplete.FILTER_CONTAINS,\n      sort: o.sort === false ? false : Awesomplete.SORT_BYLENGTH,\n      container: Awesomplete.CONTAINER,\n      item: Awesomplete.ITEM,\n      replace: Awesomplete.REPLACE,\n      tabSelect: false\n    }, o);\n    this.index = -1; // Create necessary elements\n\n    this.container = this.container(input);\n    this.ul = Awesomplete.create('ul', {\n      hidden: 'hidden',\n      role: 'listbox',\n      id: \"awesomplete_list_\".concat(this.count),\n      inside: this.container\n    });\n    this.status = Awesomplete.create('span', {\n      className: 'visually-hidden',\n      role: 'status',\n      'aria-live': 'assertive',\n      'aria-atomic': true,\n      inside: this.container,\n      textContent: this.minChars !== 0 ? \"Type \".concat(this.minChars, \" or more characters for results.\") : 'Begin typing for results.'\n    }); // Bind events\n\n    this.events = {\n      input: {\n        input: this.evaluate.bind(this),\n        blur: this.close.bind(this, {\n          reason: 'blur'\n        }),\n        keydown: function keydown(evt) {\n          var c = evt.keyCode; // If the dropdown `ul` is in view, then act on keydown for the following keys:\n          // Enter / Esc / Up / Down\n\n          if (me.opened) {\n            if (c === 13 && me.selected) {\n              // Enter\n              evt.preventDefault();\n              me.select();\n            } else if (c === 9 && me.selected && me.tabSelect) {\n              me.select();\n            } else if (c === 27) {\n              // Esc\n              me.close({\n                reason: 'esc'\n              });\n            } else if (c === 38 || c === 40) {\n              // Down/Up arrow\n              evt.preventDefault();\n              me[c === 38 ? 'previous' : 'next']();\n            }\n          }\n        }\n      },\n      form: {\n        submit: this.close.bind(this, {\n          reason: 'submit'\n        })\n      },\n      ul: {\n        // Prevent the default mousedowm, which ensures the input is not blurred.\n        // The actual selection will happen on click. This also ensures dragging the\n        // cursor away from the list item will cancel the selection\n        mousedown: function mousedown(evt) {\n          evt.preventDefault();\n        },\n        // The click event is fired even if the corresponding mousedown event has called\n        // preventDefault\n        click: function click(evt) {\n          var li = evt.target;\n\n          if (li !== this) {\n            while (li && !/li/i.test(li.nodeName)) {\n              li = li.parentNode;\n            }\n\n            if (li && evt.button === 0) {\n              // Only select on left click\n              evt.preventDefault();\n              me.select(li, evt.target);\n            }\n          }\n        }\n      }\n    };\n    Awesomplete.bind(this.input, this.events.input);\n    Awesomplete.bind(this.input.form, this.events.form);\n    Awesomplete.bind(this.ul, this.events.ul);\n\n    if (this.input.hasAttribute('list')) {\n      this.list = \"#\".concat(this.input.getAttribute('list'));\n      this.input.removeAttribute('list');\n    } else {\n      this.list = this.input.getAttribute('data-list') || o.list || [];\n    }\n\n    Awesomplete.all.push(this);\n  }\n\n  _createClass(Awesomplete, [{\n    key: \"configure\",\n    value: function configure(properties, o) {\n      var _this = this;\n\n      var iterFn = function iterFn(i) {\n        var initial = properties[i];\n\n        var attrValue = _this.input.getAttribute(\"data-\".concat(i.toLowerCase()));\n\n        if (typeof initial === 'number') {\n          _this[i] = parseInt(attrValue, 10);\n        } else if (initial === false) {\n          // Boolean options must be false by default anyway\n          _this[i] = attrValue !== null;\n        } else if (initial instanceof Function) {\n          _this[i] = null;\n        } else {\n          _this[i] = attrValue;\n        }\n\n        if (!_this[i] && _this[i] !== 0) {\n          _this[i] = i in o ? o[i] : initial;\n        }\n      };\n\n      Object.keys(properties).forEach(iterFn);\n    }\n  }, {\n    key: \"close\",\n    value: function close(o) {\n      if (!this.opened) {\n        return;\n      }\n\n      this.ul.setAttribute('hidden', '');\n      this.isOpened = false;\n      this.index = -1;\n      this.status.setAttribute('hidden', '');\n      Awesomplete.fire(this.input, 'awesomplete-close', o || {});\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      this.ul.removeAttribute('hidden');\n      this.isOpened = true;\n      this.status.removeAttribute('hidden');\n\n      if (this.autoFirst && this.index === -1) {\n        this.goto(0);\n      }\n\n      Awesomplete.fire(this.input, 'awesomplete-open');\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // remove events from the input and its form\n      Awesomplete.unbind(this.input, this.events.input);\n      Awesomplete.unbind(this.input.form, this.events.form); // cleanup container if it was created by Awesomplete but leave it alone otherwise\n\n      if (!this.options.container) {\n        // move the input out of the awesomplete container and remove the container and\n        // its children\n        var parentNode = this.container.parentNode;\n        parentNode.insertBefore(this.input, this.container);\n        parentNode.removeChild(this.container);\n      } // remove autocomplete and aria-autocomplete attributes\n\n\n      this.input.removeAttribute('autocomplete');\n      this.input.removeAttribute('aria-autocomplete'); // remove this awesomeplete instance from the global array of instances\n\n      var indexOfAwesomplete = Awesomplete.all.indexOf(this);\n\n      if (indexOfAwesomplete !== -1) {\n        Awesomplete.all.splice(indexOfAwesomplete, 1);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var count = this.ul.children.length;\n      var index = 0;\n\n      if (this.index < count - 1) {\n        index = this.index + 1;\n      } else if (count) {\n        index = 0;\n      } else {\n        index = -1;\n      }\n\n      this.goto(index);\n    }\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      var count = this.ul.children.length;\n      var pos = this.index - 1;\n      this.goto(this.selected && pos !== -1 ? pos : count - 1);\n    } // Should not be used, highlights specific item without any checks!\n\n  }, {\n    key: \"goto\",\n    value: function goto(i) {\n      var lis = this.ul.children;\n\n      if (this.selected) {\n        lis[this.index].setAttribute('aria-selected', 'false');\n      }\n\n      this.index = i;\n\n      if (i > -1 && lis.length > 0) {\n        lis[i].setAttribute('aria-selected', 'true');\n        this.status.textContent = \"\".concat(lis[i].textContent, \", list item \").concat(i + 1, \" of \").concat(lis.length);\n        this.input.setAttribute('aria-activedescendant', \"\".concat(this.ul.id, \"_item_\").concat(this.index)); // scroll to highlighted element in case parent's height is fixed\n\n        this.ul.scrollTop = lis[i].offsetTop - this.ul.clientHeight + lis[i].clientHeight;\n        var suggestion = this.suggestions[this.index];\n        Awesomplete.fire(this.input, 'awesomplete-highlight', {\n          selectedIndex: this.index,\n          selectedText: \"\".concat(suggestion),\n          selectedSuggestion: suggestion\n        });\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(selected, origin) {\n      var selectedItem = selected;\n\n      if (selected) {\n        this.index = Awesomplete.siblingIndex(selected);\n      } else {\n        selectedItem = this.ul.children[this.index];\n      }\n\n      if (selectedItem) {\n        var selectedIndex = this.index;\n        var suggestion = this.suggestions[selectedIndex];\n        var allowed = Awesomplete.fire(this.input, 'awesomplete-select', {\n          selectedIndex: selectedIndex,\n          selectedText: \"\".concat(suggestion),\n          selectedSuggestion: suggestion,\n          origin: origin || selectedItem\n        });\n\n        if (allowed) {\n          this.replace(suggestion);\n          this.close({\n            reason: 'select'\n          });\n          Awesomplete.fire(this.input, 'awesomplete-selectcomplete', {\n            selectedIndex: selectedIndex,\n            selectedText: \"\".concat(suggestion),\n            selectedSuggestion: suggestion\n          });\n        }\n      }\n    }\n  }, {\n    key: \"evaluate\",\n    value: function evaluate() {\n      var me = this;\n      var value = this.input.value;\n\n      if (value.length >= this.minChars && this.dataList && this.dataList.length > 0) {\n        this.index = -1; // Populate list with options that match\n\n        this.ul.innerHTML = '';\n\n        var mapFn = function mapFn(item) {\n          return new Suggestion(me.data(item, value));\n        };\n\n        var filterFn = function filterFn(item) {\n          return me.filter(item, value);\n        };\n\n        this.suggestions = this.dataList.map(mapFn).filter(filterFn);\n\n        if (this.sort !== false) {\n          this.suggestions = this.suggestions.sort(this.sort);\n        }\n\n        this.suggestions = this.suggestions.slice(0, this.maxItems);\n\n        var appendFn = function appendFn(text, index) {\n          me.ul.appendChild(me.item(text, value, index));\n        };\n\n        this.suggestions.forEach(appendFn);\n\n        if (this.ul.children.length === 0) {\n          this.status.textContent = 'No results found';\n          this.close({\n            reason: 'nomatches'\n          });\n        } else {\n          this.open();\n          this.status.textContent = \"\".concat(this.ul.children.length, \" results found\");\n        }\n      } else {\n        this.close({\n          reason: 'nomatches'\n        });\n        this.status.textContent = 'No results found';\n      }\n    } // Mark: Static methods/properties\n\n  }, {\n    key: \"list\",\n    set: function set(list) {\n      if (Array.isArray(list)) {\n        this.dataList = list;\n      } else if (typeof list === 'string' && list.indexOf(',') > -1) {\n        this.dataList = list.split(/\\s*,\\s*/);\n      } else {\n        // Element or CSS selector\n        var queriedList = Awesomplete.query(list);\n\n        if (queriedList && queriedList.children) {\n          var items = [];\n\n          var iterFn = function iterFn(el) {\n            if (!el.disabled) {\n              var text = el.textContent.trim();\n              var value = el.value || text;\n              var label = el.label || text;\n\n              if (value !== '') {\n                items.push({\n                  label: label,\n                  value: value\n                });\n              }\n            }\n          };\n\n          Array.prototype.slice.apply(queriedList.children).forEach(iterFn);\n          this.dataList = items;\n        }\n      }\n\n      if (document.activeElement === this.input) {\n        this.evaluate();\n      }\n    },\n    get: function get() {\n      return this.dataList;\n    }\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this.index > -1;\n    }\n  }, {\n    key: \"opened\",\n    get: function get() {\n      return this.isOpened;\n    }\n  }], [{\n    key: \"FILTER_CONTAINS\",\n    value: function FILTER_CONTAINS(text, input) {\n      return RegExp(Awesomplete.regExpEscape(input.trim()), 'i').test(text);\n    }\n  }, {\n    key: \"FILTER_STARTSWITH\",\n    value: function FILTER_STARTSWITH(text, input) {\n      return RegExp(\"^\".concat(Awesomplete.regExpEscape(input.trim())), 'i').test(text);\n    }\n  }, {\n    key: \"SORT_BYLENGTH\",\n    value: function SORT_BYLENGTH(a, b) {\n      if (a.length !== b.length) {\n        return a.length - b.length;\n      }\n\n      return a < b ? -1 : 1;\n    }\n  }, {\n    key: \"CONTAINER\",\n    value: function CONTAINER(input) {\n      return Awesomplete.create('div', {\n        className: 'awesomplete',\n        around: input\n      });\n    }\n  }, {\n    key: \"ITEM\",\n    value: function ITEM(text, input, itemId) {\n      var html = input.trim() === '' ? text : \"\".concat(text).replace(RegExp(Awesomplete.regExpEscape(input.trim()), 'gi'), '<mark>$&</mark>');\n      return Awesomplete.create('li', {\n        innerHTML: html,\n        'aria-selected': 'false',\n        id: \"awesomplete_list_\".concat(this.count, \"_item_\").concat(itemId)\n      });\n    }\n  }, {\n    key: \"REPLACE\",\n    value: function REPLACE(text) {\n      this.input.value = text.value || text.label;\n    }\n  }, {\n    key: \"DATA\",\n    value: function DATA(item\n    /* , input */\n    ) {\n      return item;\n    } // Helpers\n\n  }, {\n    key: \"query\",\n    value: function query(expr, con) {\n      return typeof expr === 'string' ? (con || document).querySelector(expr) : expr || null;\n    }\n  }, {\n    key: \"queryAll\",\n    value: function queryAll(expr, con) {\n      return Array.prototype.slice.call((con || document).querySelectorAll(expr));\n    }\n  }, {\n    key: \"create\",\n    value: function create(tag, o) {\n      var element = document.createElement(tag);\n\n      var iterFn = function iterFn(i) {\n        var val = o[i];\n\n        if (i === 'inside') {\n          Awesomplete.query(val).appendChild(element);\n        } else if (i === 'around') {\n          var ref = Awesomplete.query(val);\n          ref.parentNode.insertBefore(element, ref);\n          element.appendChild(ref);\n\n          if (ref.getAttribute('autofocus') != null) {\n            ref.focus();\n          }\n        } else if (i in element) {\n          element[i] = val;\n        } else {\n          element.setAttribute(i, val);\n        }\n      };\n\n      Object.keys(o).forEach(iterFn);\n      return element;\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(element, o) {\n      if (element) {\n        var iterFn = function iterFn(cKey) {\n          var callback = o[cKey];\n\n          var eventIterFn = function eventIterFn(event) {\n            element.addEventListener(event, callback);\n          };\n\n          cKey.split(/\\s+/).forEach(eventIterFn);\n        };\n\n        Object.keys(o).forEach(iterFn);\n      }\n    }\n  }, {\n    key: \"unbind\",\n    value: function unbind(element, o) {\n      if (element) {\n        var iterFn = function iterFn(cKey) {\n          var callback = o[cKey];\n\n          var eventIterFn = function eventIterFn(event) {\n            element.removeEventListener(event, callback);\n          };\n\n          cKey.split(/\\s+/).forEach(eventIterFn);\n        };\n\n        Object.keys(o).forEach(iterFn);\n      }\n    }\n  }, {\n    key: \"fire\",\n    value: function fire(target, type, properties) {\n      var evt = document.createEvent('HTMLEvents');\n\n      var iterFn = function iterFn(j) {\n        evt[j] = properties[j];\n      };\n\n      evt.initEvent(type, true, true);\n\n      if (_typeof(properties) === 'object') {\n        Object.keys(properties).forEach(iterFn);\n      }\n\n      return target.dispatchEvent(evt);\n    }\n  }, {\n    key: \"regExpEscape\",\n    value: function regExpEscape(s) {\n      return s.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n  }, {\n    key: \"siblingIndex\",\n    value: function siblingIndex(el) {\n      var i = 0;\n      var testEl = el;\n\n      while (testEl) {\n        testEl = testEl.previousElementSibling;\n\n        if (testEl) {\n          i += 1;\n        }\n      }\n\n      return i;\n    }\n  }]);\n\n  return Awesomplete;\n}();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]).default;